name: DIGITClusterworkflow
on:
  push:
    branches:
      - UPYOG-Bootcamp
jobs:
  input_validation:
    runs-on: ubuntu-latest
    env:
      TF_IN_AUTOMATION: "true"
      AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION:  ${{ secrets.AWS_DEFAULT_REGION }}
      AWS_REGION:  ${{ secrets.AWS_REGION }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build project
        run: echo "Build started"
      - name: Displaying the input parameters provided
        run: cat input.yaml
        working-directory: infra-as-code/terraform/sample-aws
      - name: Change working directory
        run: echo "This command is run in the current directory"
        working-directory: infra-as-code/terraform/sample-aws/remote-state
      - name: Displaying DB Password and key in egov-demo-secrets.yaml
        run: cat egov-demo-secrets.yaml
        working-directory: config-as-code/environments
      - name: Updating different files based on parameters provided in input.yaml
        run: go run init.go
        working-directory: infra-as-code/terraform/scripts
      - name: Upload infra-as-code folder as artifact
        uses: actions/upload-artifact@v2
        with:
          name: infra-as-code-artifact
          path: infra-as-code/
      - name: Upload config-as-code folder as artifact
        uses: actions/upload-artifact@v2
        with:
          name: config-as-code-artifact
          path: config-as-code/

  terraform_infra_creation:
    needs: input_validation
    runs-on: ubuntu-latest
    env:
      TF_IN_AUTOMATION: "true"
      AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION:  ${{ secrets.AWS_DEFAULT_REGION }}
      AWS_REGION:  ${{ secrets.AWS_REGION }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Download infra-as-code folder from artifacts
        uses: actions/download-artifact@v2
        with:
          name: infra-as-code-artifact
          path: .
      - name: Download config-as-code folder from artifacts
        uses: actions/download-artifact@v2
        with:
          name: config-as-code-artifact
          path: .
      - name: Terraform Init - remotestate
        id: init
        run: terraform init
        working-directory: infra-as-code/terraform/sample-aws/remote-state
      - name: Terraform Validate - remotestate
        id: validate
        run: terraform validate -no-color
        working-directory: infra-as-code/terraform/sample-aws/remote-state  
      - name: Terraform Plan - remotestate
        id: plan
        run: terraform plan -no-color -input=false 
        working-directory: infra-as-code/terraform/sample-aws/remote-state
      - name: Terraform Apply - remotestate
        id: apply
        run: terraform apply -no-color -input=false -auto-approve
        continue-on-error: true  
        working-directory: infra-as-code/terraform/sample-aws/remote-state
      - name: Terraform init - Infra creation
        id: init-Infra
        run: terraform init
        working-directory: infra-as-code/terraform/sample-aws
      - name: Terraform Validate - Infra creation
        id: validate-Infra
        run: terraform validate -no-color
        working-directory: infra-as-code/terraform/sample-aws
      - name: Terraform Plan - Infra creation
        id: plan-Infra
        run: terraform plan -no-color -input=false -var db_password=demo123456   
        working-directory: infra-as-code/terraform/sample-aws
      - name: Terraform Apply - Infra creation
        id: apply-Infra
        run: terraform apply -no-color -input=false -auto-approve -var db_password=demo123456
        continue-on-error: true  
        working-directory: infra-as-code/terraform/sample-aws
      - name: Extract kubeconfig
        id: get_kubeconfig
        run: |
          output=$(terraform output -json)
          kubeconfig=$(echo "${output}" | jq -r .kubectl_config.value)
          echo "::set-output name=kubeconfig::${kubeconfig}"
      - name: Configure kubectl
        uses: azure/setup-kubectl@v1
        with:
          kubeconfig: ${{ steps.get_kubeconfig.outputs.kubeconfig }}  
      - name: Verify kubectl configuration
        run: kubectl config view 
